---
# hooks that rely on uv to track dependencies instead of pre-commit hooks
# Order matters: faster hooks first, also auto-formatters being prioritized
- id: toml
  # keep name lowercase for consistency with other hook names
  name: toml
  description: Reformat toml files
  entry: uv run -q --group lint tombi format
  language: system
  pass_filenames: false
  types_or: [toml]
- id: md
  name: markdown (md)
  description: Runs markdownlint-cli2 with fix
  language: node
  pass_filenames: false
  types: [markdown]
  additional_dependencies:
    - markdownlint-cli2
    - markdownlint-cli2-formatter-pretty
    - markdownlint-cli2-formatter-summarize
  entry: markdownlint-cli2 --fix "**/*.md" "#node_modules"
- id: ruff
  name: ruff
  language: system
  types_or: [python, pyi, jupyter]
  pass_filenames: false
  description: This hook runs ruff check and ruff format
  entry: sh -c "uv run -q --group lint ruff check --force-exclude && uv run -q --group lint ruff format --force-exclude"
- id: mypy
  name: mypy
  description: This hook runs mypy
  entry: uv run -q --group lint mypy .
  language: system
  types_or: [python, pyi]
  pass_filenames: false
- id: ansible-lint
  # keep name lowercase for consistency with other hook names
  name: ansible-lint
  description: This hook runs ansible-lint --fix
  # for ansible-lint in particular we want to for use of python>=3.13 to ensure
  # that latest ansible-core will be installed. Always use --isolated when
  # you mention custom python version to avoid accidentally recreating current venv
  entry: uv run -q --isolated --python='>=3.13,<3.14' --group lint ansible-lint --fix -v --force-color
  language: system
  pass_filenames: false
